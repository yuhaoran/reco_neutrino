! path to initial conditions (use local scratch space)
character(*), parameter :: ic_path        = '/WORK/bnu_ztj_1/yuanshuo/tildes/LOS29-3/'

! path to local scratch (for writing temp files)
character(*), parameter :: scratch_path   = ic_path

! path to simulation output (use local scratch space)
character(*), parameter :: output_path    = ic_path

! path to cubepm root directory 
character(*), parameter :: cubepm_root    = '../'

! path to shm directory
character(*), parameter :: shm_path    = '/dev/shm/'

! nodes / dimension, total nodes = nodes_dim**3
#ifdef SUBV
  integer(4),   parameter :: nodes_dim_subv = 2 !! sub-volume
  integer(4),   parameter :: nodes_dim        = nodes_dim_subv + 2
  integer(4),   parameter :: nodes_dim_global = 24
  integer(4),   parameter :: first_coord(3)      = (/0,0,0/)
#else
  integer(4),   parameter :: nodes_sim=24
#endif

! fine mesh tiles / node / dimension
integer(4),   parameter :: tiles_node_dim = 6

! cores / node
integer(4),   parameter :: cores = 4
integer(4),   parameter :: nested_threads = 6

! density buffer fraction (1.0 == no buffer, 2.0 == 2x avg density, etc)
real(4), parameter :: density_buffer = 1.7

! size of fine mesh tile in cells / dimension
! this must be set as:
!  nf_tile = I*mesh_scale*(nodes_dim)**2 / tiles_node_dim + 2*nf_buf
!   -- where I is an integer 
! run batch/mem_usage to calculate

integer(4),   parameter :: nf_tile        = 240

! boxsize of simulation in Mpc/h
real(4),      parameter :: box            = nodes_dim*50

! initial redshift
real(4),      parameter :: z_i            = 100
real(4),      parameter :: z_i_nu         = 5

! neutrino parameters
real(4),      parameter :: H0             = 67.
integer(4),   parameter :: ratio_nudm_dim = 2
real(4),      parameter :: mass_neutrino = 0.05
real(4),      parameter :: omega_nu = mass_neutrino/93.14/(H0/100.)/(H0/100.)

! omega fractions 
real(4),      parameter :: omega_c        = 0.27
real(4),      parameter :: omega_b        = 0.05
real(4),      parameter :: omega_m        = omega_nu+omega_c+omega_b
real(4),      parameter :: omega_l        = 1.0-omega_m
real(4),      parameter :: omega_ch       = 0.7
real(4),      parameter :: bias           = 1
real(4),      parameter :: power_index    = 2.0 ! 1.0,1.5 and 2.0 for power law transfer function in initial condition generator.

! non-gaussian initial conditions parameters
real(4),      parameter :: f_nl           = 0.0
real(4),      parameter :: g_nl           = 0.0
real(4),      parameter :: n_s            = 0.96
real(4),      parameter :: scalar_amp     = 2.46e-9
real(4),      parameter :: k_pivot_scalar = 0.02 ! 1/Mpc

! Fine mesh force cut-off in fine mesh cells (determined by kernel)
integer(4),   parameter :: nf_cutoff      = 16

! Fine mesh buffer size in fine mesh cells
integer(4),   parameter :: nf_buf         = nf_cutoff + 8

! number of cells / dimension of entire simulation
integer(4),   parameter :: nc             = (nf_tile-2*nf_buf)*tiles_node_dim*nodes_dim
